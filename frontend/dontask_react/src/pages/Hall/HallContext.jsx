import React, { createContext, useContext, useState, useCallback } from "react";
import { useToast } from "../../components/Toast/ToastContext";
import { fetchWithAuth, patchWithAuth } from "../../service/api.js";

const ProjectContext = createContext(null);

export const ProjectProvider = ({ children }) => {
  const [projectData, setProjectData] = useState(null);
  const [initialProjectData, setInitialProjectData] = useState(null);
  // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –º–æ–º–µ–Ω—Ç –≤—Ö–æ–¥–∞ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (EDIT)
  const [snapshotProjectData, setSnapshotProjectData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [isFilteredByMember, setIsFilteredByMember] = useState(false);
  const [isEditMode, setIsEditMode] = useState(false);

  // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π, –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –≤ —Ä–µ–∂–∏–º–µ EDIT
  const [projectChanges, setProjectChanges] = useState({
    newProjectName: null,
    newProjectDescription: null,
    boardsToDelete: [],
    boardsToUpdate: [],
    membersToKick: [],
  });
  const showToast = useToast();

  const updateBoards = useCallback((newBoard) => {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫ –∫–∞–∫ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å–∫–∏ - —ç—Ç–æ –Ω–µ "–∏–∑–º–µ–Ω–µ–Ω–∏–µ",
    // –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –æ—Ç–º–µ–Ω—è—Ç—å—Å—è –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∏—Ç—å", –µ—Å–ª–∏ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ –¥–æ –≤—Ö–æ–¥–∞ –≤ EDIT.
    setProjectData((prevData) => {
      if (!prevData) return null;
      return {
        ...prevData,
        boards: [...(prevData.boards || []), newBoard],
      };
    });

    // –í–ê–ñ–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –∏ —Å–Ω–∞–ø—à–æ—Ç, –∏ initial, —á—Ç–æ–±—ã –Ω–æ–≤–∞—è –¥–æ—Å–∫–∞ –Ω–µ —É–¥–∞–ª—è–ª–∞—Å—å
    // –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–µ, –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤–Ω–µ —Ä–µ–∂–∏–º–∞ EDIT.
    setSnapshotProjectData((prevData) => {
      if (!prevData) return null;
      return {
        ...prevData,
        boards: [...(prevData.boards || []), newBoard],
      };
    });
    setInitialProjectData((prevData) => {
      if (!prevData) return null;
      return {
        ...prevData,
        boards: [...(prevData.boards || []), newBoard],
      };
    });
  }, []);

  const toggleFilter = useCallback(() => {
    setIsFilteredByMember((prev) => !prev);
  }, []);

  // ------------------------------------------
  // –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–ú–ò
  // ------------------------------------------

  // 1. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è projectData (—Ç–æ–ª—å–∫–æ UI-–¥–∞–Ω–Ω—ã—Ö)
  const setProjectDataUI = useCallback((updater) => {
    setProjectData(updater);
  }, []);

  // 2. –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≤ projectChanges
  const updateProjectNameChange = useCallback((newName) => {
    setProjectChanges((prev) => ({
      ...prev,
      newProjectName: newName,
    }));
  }, []);

  // ------------------------------------------
  // –§–£–ù–ö–¶–ò–ò –ö–ù–û–ü–û–ö –†–ï–ñ–ò–ú–ê –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø
  // ------------------------------------------

  // –û–¢–ú–ï–ù–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô (Reset)
  const resetChanges = useCallback(() => {
    // 1. –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º UI-–¥–∞–Ω–Ω—ã–µ (projectData) –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Ä–µ–∂–∏–º EDIT
    if (snapshotProjectData) {
      setProjectData(snapshotProjectData);
    } else if (initialProjectData) {
      // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–Ω–∞–ø—à–æ—Ç –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω
      setProjectData(initialProjectData);
    }

    // 2. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    setProjectChanges({
      newProjectName: null,
      newProjectDescription: null,
      boardsToDelete: [],
      boardsToUpdate: [],
      membersToKick: [],
    });
    // 3. –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setIsEditMode(false);
    showToast("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã");
  }, [snapshotProjectData, initialProjectData, showToast]);

  // –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô (Confirm)
  const applyChanges = useCallback(async () => {
    const projectId = projectData?.projectId;
    if (!projectId) {
      setIsEditMode(false);
      return;
    }

    const promises = [];

    // 1. –û–ë–ù–û–í–õ–ï–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø –ü–†–û–ï–ö–¢–ê
    if (projectChanges.newProjectName !== null) {
      const newName = projectChanges.newProjectName.trim();
      const originalName = initialProjectData.projectName.trim();

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ
      if (newName && newName !== originalName) {
        const updateNamePromise = patchWithAuth(
          `/Projects/${projectId}/UpdateProjectName`,
          { updatedProjectName: newName } // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –±—ç–∫–µ–Ω–¥–∞
        )
          .then(() => {
            showToast("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! ‚úÖ");
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            setInitialProjectData((prev) => ({
              ...prev,
              projectName: newName,
            }));
            // üí° –û–±–Ω–æ–≤–ª—è–µ–º snapshotProjectData, —á—Ç–æ–±—ã –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Ç–æ—á–∫—É –æ—Ç–∫–∞—Ç–∞
            setSnapshotProjectData((prev) => ({
              ...prev,
              projectName: newName,
            }));
          })
          .catch((error) => {
            showToast("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞", "error");
            console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è:", error);
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º UI-–¥–∞–Ω–Ω—ã–µ –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –Ω–∞–∑–≤–∞–Ω–∏—é
            setProjectData((prev) => ({ ...prev, projectName: originalName }));
          });

        promises.push(updateNamePromise);
      }
    }

    // –ñ–¥–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ)
    await Promise.allSettled(promises);

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    setProjectChanges({
      newProjectName: null,
      newProjectDescription: null,
      boardsToDelete: [],
      boardsToUpdate: [],
      membersToKick: [],
    });

    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setIsEditMode(false);
  }, [projectChanges, projectData, initialProjectData, showToast]);

  // üí° –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–æ—Ö—Ä–∞–Ω—è–µ–º "—Å–Ω–∞–ø—à–æ—Ç" –ø—Ä–∏ –≤—Ö–æ–¥–µ
  const toggleEditMode = useCallback(() => {
    if (!isEditMode) {
      // üöÄ –í–•–û–î –í –†–ï–ñ–ò–ú –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø:
      // –°–æ–∑–¥–∞–µ–º –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞.
      // JSON.parse(JSON.stringify()) - –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç.
      if (projectData) {
        setSnapshotProjectData(JSON.parse(JSON.stringify(projectData)));
      }
    } else {
      // üõë –í–´–•–û–î –ò–ó –†–ï–ñ–ò–ú–ê (—á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É EDIT/RESET):
      resetChanges();
    }
    setIsEditMode((prev) => !prev);
  }, [isEditMode, resetChanges, projectData]);

  // ------------------------------------------
  // –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò –î–ê–ù–ù–´–•
  // ------------------------------------------
  const setProjectDataAndInitial = useCallback((data) => {
    setProjectData(data);
    if (data) {
      setInitialProjectData(data); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      // –ü—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ, —Ç–∞–∫–∂–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º snapshot
      setSnapshotProjectData(data);
    }
  }, []);

  const value = {
    projectData,
    setProjectData: setProjectDataAndInitial, // –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö (Hall.jsx)
    setProjectDataUI, // –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è UI-–¥–∞–Ω–Ω—ã—Ö (BoardHeader.jsx)
    loading,
    setLoading,
    showToast,
    updateBoards,
    isFilteredByMember,
    toggleFilter,
    isEditMode,
    toggleEditMode,
    resetChanges,
    applyChanges,
    projectChanges,
    updateProjectNameChange,
  };

  return (
    <ProjectContext.Provider value={value}>{children}</ProjectContext.Provider>
  );
};

export const useProject = () => {
  const context = useContext(ProjectContext);
  if (context === undefined) {
    throw new Error("useProject –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ ProjectProvider");
  }
  return context;
};
