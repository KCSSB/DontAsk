import React, { useEffect, useState } from "react";
import { useProject } from "../../HallContext.jsx";
import { useNavigate } from "react-router-dom";
import "./BoardHeader.css";
import filter_icon from "./filter_icon.png";
import board_icon from "./board_icon.png";

export default function BoardHeader({ boardsCount }) {
  const {
    projectData,
    loading,
    showToast,
    isFilteredByMember,
    toggleFilter,
    isEditMode, // üëà –ò—Å–ø–æ–ª—å–∑—É–µ–º isEditMode
    setProjectData,
  } = useProject();
  const navigate = useNavigate();

  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
  const [projectName, setProjectName] = useState("");

  useEffect(() => {
    if (!loading && projectData) {
      setProjectName(projectData.projectName);
    }
    if (!loading && !projectData) {
      showToast(
        "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–æ–µ–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
        "error"
      );
      const timer = setTimeout(() => {
        navigate("/home");
      }, 1000);
      return () => clearTimeout(timer);
    }
  }, [loading, projectData, navigate, showToast]);

  const handleProjectNameChange = (e) => {
    setProjectName(e.target.value);
  };

  const handleSaveProjectName = async (e) => {
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
    if (e.key === "Enter" || e.type === "blur") {
      e.target.blur();
      const trimmedName = projectName.trim();
      if (!trimmedName || trimmedName === projectData.projectName) {
        setProjectName(projectData.projectName); // –í–æ–∑–≤—Ä–∞—Ç –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É, –µ—Å–ª–∏ –ø—É—Å—Ç–æ –∏–ª–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
        return;
      }

      // TODO: –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, PUT –∑–∞–ø—Ä–æ—Å)
      // try {
      //   await putWithAuth(`/project/${projectData.projectId}/UpdateName`, { NewName: trimmedName });
      //   // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–∞–∑–∏–ª–∏—Å—å
      //   setProjectData(prev => ({ ...prev, projectName: trimmedName }));
      //   showToast("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", "success");
      // } catch (error) {
      //   showToast("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è.", "error");
      //   setProjectName(projectData.projectName);
      // }
      console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:", trimmedName);
    }
  };

  if (loading || !projectData) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  const handleFilterClick = () => {
    toggleFilter();
    showToast(
      isFilteredByMember
        ? "–ü–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –¥–æ—Å–∫–∏"
        : "–ü–æ–∫–∞–∑–∞–Ω—ã –¥–æ—Å–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ",
      "info"
    );
  };

  return (
    <div className="board-header-container">
      {isEditMode ? (
        <input
          type="text"
          className="project-title-input"
          value={projectName}
          onChange={handleProjectNameChange}
          onBlur={handleSaveProjectName}
          onKeyDown={(e) => {
            if (e.key === "Enter") handleSaveProjectName(e);
          }}
        />
      ) : (
        <h5 className="project-title">{projectData.projectName}</h5>
      )}

      <div className="action-container">
        <div className="action-left-container">
          <h5 className="text-style">–î–æ—Å–∫–∏</h5>
          <div className="board-counter">
            <img src={board_icon} alt="BOARDS" />
            <p>{boardsCount}</p>
          </div>
        </div>
        <div className="action-right-container">
          <button
            className={`filter-button ${isFilteredByMember ? "active" : ""}`}
            onClick={handleFilterClick}
          >
            <img src={filter_icon} alt="FILTER" />
          </button>
        </div>
      </div>
      <div className="separating-line"> </div>
    </div>
  );
}
