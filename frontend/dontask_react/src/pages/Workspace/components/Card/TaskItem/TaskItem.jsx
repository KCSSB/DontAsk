import React, { useState, useEffect, useCallback } from "react";
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –æ–±—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç isEditMode –∏ updateTaskName
import { useWorkspace } from "../../WorkspaceContext.jsx";
import { useWorkspaceEdit } from "../../WorkspaceEditContext.jsx";

// –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏
const TaskItem = ({ task, updateTaskNameInState }) => {
  // üîë –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  const { updateTaskName } = useWorkspace();
  const { isEditMode } = useWorkspaceEdit();
  // üîë –í–†–ï–ú–ï–ù–ù–´–ô –õ–û–ì
  console.log(`Task ${task.cardId}: isEditMode =`, isEditMode);
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∑–∞–¥–∞—á–∏ (cardId)
  const taskId = task.cardId;

  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–º –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  const [name, setName] = useState(task.cardName || "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞");

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: –µ—Å–ª–∏ –≤–Ω–µ—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ (task.cardName) –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  useEffect(() => {
    setName(task.cardName || "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞");
  }, [task.cardName]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
  const handleSave = async () => {
    const newName = name.trim();

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ –∏–º—è
    if (
      newName === (task.cardName || "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞").trim() ||
      newName === ""
    ) {
      // –ï—Å–ª–∏ –ø—É—Å—Ç–æ, –∏–ª–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
      if (newName === "") setName(task.cardName || "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞");
      return;
    }

    // 2. –í—ã–∑—ã–≤–∞–µ–º API –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const success = await updateTaskName(taskId, newName);

    if (!success) {
      // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º—Å—è –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∏–º–µ–Ω–∏
      setName(task.cardName || "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞");
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter
  const handleKeyDown = (e) => {
    if (e.key === "Enter") {
      e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã)
      e.target.blur(); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º onBlur, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ
    }
  };

  // ----------------------------------------------------
  // üîë –£–°–õ–û–í–ù–´–ô –†–ï–ù–î–ï–†–ò–ù–ì –ù–ê–ó–í–ê–ù–ò–Ø –ó–ê–î–ê–ß–ò
  // ----------------------------------------------------
  return (
    <div className="task-item-container">
      <div className="task-name-wrapper">
        {isEditMode ? (
          // –†–ï–ñ–ò–ú –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø: –ü–æ–ª–µ –≤–≤–æ–¥–∞
          <input
            type="text"
            className="task-name-input"
            value={name}
            onChange={(e) => setName(e.target.value)}
            onBlur={handleSave}
            onKeyDown={handleKeyDown}
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —ç–ª–µ–º–µ–Ω—Ç –∞–∫—Ç–∏–≤–µ–Ω
            autoFocus
          />
        ) : (
          // –û–ë–´–ß–ù–´–ô –†–ï–ñ–ò–ú: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–≠–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ–ª–æ–Ω–∫–∏")
          <div className="task-name-display">
            {task.cardName || "–≠–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ–ª–æ–Ω–∫–∏"}
          </div>
        )}
      </div>

      {/* ... –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–¥–∞—á–∏: –ø–æ–¥–∑–∞–¥–∞—á–∏, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, –¥–µ–¥–ª–∞–π–Ω –∏ —Ç.–¥. ... */}
    </div>
  );
};

export default TaskItem;
